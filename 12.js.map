{"version":3,"sources":["./node_modules/@aws-amplify/ui-components/dist/esm/constants-d1abe7de.js","./node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-image.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmlB;;;;;;;;;;;;;AChCnlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AAC/B;AACoB;AAC9B;AACH;AAC+D;;AAE7F,iCAAiC,eAAe,cAAc,iBAAiB,gBAAgB,IAAI,qBAAqB,mBAAmB;;AAE3I,mBAAmB,wDAAM;AACzB;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA,qBAAqB,4DAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAA4D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAgB;AACtC;AACA,6BAA6B,sEAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,CAAC,oDAAI,oBAAoB,4DAAC,SAAS,wEAAwE;AAC5H;AACA,2BAA2B;AAC3B;AACA,MAAM;AACN;AACA;;AAE8C","file":"12.js","sourcesContent":["// Dictionaries\n// fieldId constants\nconst USERNAME_SUFFIX = 'username';\nconst EMAIL_SUFFIX = 'email';\nconst CODE_SUFFIX = 'code';\nconst PHONE_SUFFIX = 'phone';\nconst PASSWORD_SUFFIX = 'password';\n// Country Dial Code common constants\nconst COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nconst COUNTRY_DIAL_CODE_DEFAULT = '+1';\n// Auth Keys\nconst AUTH_SOURCE_KEY = 'amplify-auth-source';\nconst REDIRECTED_FROM_HOSTED_UI = 'amplify-redirected-from-hosted-ui';\nconst AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';\n// Error message Common Constants\nconst PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nconst NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\nconst NO_STORAGE_MODULE_FOUND = 'No Storage module found, please ensure @aws-amplify/storage is imported';\nconst NO_INTERACTIONS_MODULE_FOUND = 'No Interactions module found, please ensure @aws-amplify/interactions is imported';\n// TOTP Messages\nconst SETUP_TOTP = 'SETUP_TOTP';\n// Select MFA Types Messages\nconst USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nconst USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa';\n// Common events\nconst SUCCESS = 'SUCCESS';\n// Hub Events and Channels\nconst AUTH_CHANNEL = 'auth';\nconst UI_AUTH_CHANNEL = 'UI Auth';\nconst TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nconst AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\n\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_SUFFIX as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, REDIRECTED_FROM_HOSTED_UI as R, SETUP_TOTP as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, PHONE_SUFFIX as b, AUTHENTICATOR_AUTHSTATE as c, NO_INTERACTIONS_MODULE_FOUND as d, NO_STORAGE_MODULE_FOUND as e, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as f, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as g, COUNTRY_DIAL_CODE_DEFAULT as h, SUCCESS as i, AUTH_SOURCE_KEY as j, CODE_SUFFIX as k, PASSWORD_SUFFIX as l, USERNAME_SUFFIX as m };\n","import { r as registerInstance, h, H as Host } from './index-3fb5c139.js';\nimport { Logger } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport './constants-d1abe7de.js';\nimport '@aws-amplify/storage';\nimport { p as putStorageObject, g as getStorageObject } from './storage-helpers-48c373a0.js';\n\nconst amplifyS3ImageCss = \":host{height:inherit;width:inherit;--height:inherit;--width:inherit}img{height:var(--height);width:var(--width)}\";\n\nconst logger = new Logger('S3Image');\nconst AmplifyS3Image = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'binary/octet-stream';\n        /** The access level of the image */\n        this.level = AccessLevel.Public;\n    }\n    async watchHandler() {\n        await this.load();\n    }\n    async componentWillLoad() {\n        await this.load();\n    }\n    async load() {\n        const { imgKey, path, body, contentType, level, track, identityId } = this;\n        if (!imgKey && !path) {\n            logger.debug('empty imgKey and path');\n            return;\n        }\n        const key = imgKey || path;\n        logger.debug('loading ' + key + '...');\n        try {\n            if (body) {\n                await putStorageObject(imgKey, body, level, track, contentType, logger);\n            }\n            this.src = await getStorageObject(key, level, track, identityId, logger);\n        }\n        catch (err) {\n            logger.debug(err);\n            throw new Error(err);\n        }\n    }\n    render() {\n        return (h(Host, null, this.src && h(\"img\", { src: this.src, onLoad: this.handleOnLoad, onError: this.handleOnError })));\n    }\n    static get watchers() { return {\n        \"body\": [\"watchHandler\"]\n    }; }\n};\nAmplifyS3Image.style = amplifyS3ImageCss;\n\nexport { AmplifyS3Image as amplify_s3_image };\n"],"sourceRoot":"webpack:///"}